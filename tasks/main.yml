- name: Set login shell for user www-data
  user: name=www-data shell=/bin/bash

- name: "Set permissions on {{ www_data_home_dir }}"
  file: path="{{ www_data_home_dir }}" owner=www-data group=www-data mode=750 state=directory

- name: Clone the opencraft repository
  git: repo=https://github.com/open-craft/opencraft.git dest="{{ opencraft_root_dir }}" update=no
  become_user: www-data

- name: Install system dependencies
  command: make install_system_dependencies chdir="{{ opencraft_root_dir }}"

- name: Install virtualenv
  pip: name=virtualenv executable=pip3

- name: Install python requirements
  pip:
    requirements="{{ opencraft_root_dir }}/requirements.txt"
    virtualenv="{{ opencraft_virtualenv_dir }}"
    virtualenv_python=python3.5
  become_user: www-data

- name: Install the venv wrapper script
  copy: src=venv_exec dest="{{ opencraft_virtualenv_dir }}/bin/exec" mode=755
  become_user: www-data

- name: Install the configuration/environment file
  template: src=env.j2 dest="{{ opencraft_root_dir }}/.env" mode=600
  become_user: www-data

- name: "Create directory {{ www_data_home_dir }}/.ssh"
  file: path="{{ www_data_home_dir }}/.ssh" state=directory
  become_user: www-data

- name: Install the SSH private key used for deploying instances.
  copy:
    content: "{{ OPENCRAFT_OPENSTACK_SSH_KEY }}"
    dest: "{{ www_data_home_dir }}/.ssh/id_rsa"
    mode: 600
  become_user: www-data

- name: Copy nginx site configuration
  template: src=opencraft-nginx.j2 dest=/etc/nginx/sites-available/opencraft

- name: Enable nginx site configuration
  file: src=/etc/nginx/sites-available/opencraft dest=/etc/nginx/sites-enabled/opencraft state=link

- name: Copy SSL certificate
  copy: content="{{ OPENCRAFT_SSL_CERT }}" dest=/etc/ssl/certs/ssl-cert.pem group=ssl-cert mode=640

- name: Copy SSL certificate
  copy: content="{{ OPENCRAFT_SSL_KEY }}" dest=/etc/ssl/certs/ssl-cert.key group=ssl-cert mode=640

- name: Restart nginx
  service: name=nginx state=restarted

- name: Open HTTP port on the firewall
  ufw: rule=allow port={{ item }} proto=tcp
  with_items:
    - 80
    - 443
